
from onvif import ONVIFCamera
import time
from lxml import etree

def parse_event(event):
    try:
        message = event.Message['_value_1']
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º XML –≤ –æ–±—ä–µ–∫—Ç lxml
        xml_tree = etree.ElementTree(message)

        # –î–æ—Å—Ç–∞—ë–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        utc_time = message.attrib.get("UtcTime", "Unknown Time")
        operation = message.attrib.get("PropertyOperation", "Unknown Operation")

        is_motion = xml_tree.find(".//{http://www.onvif.org/ver10/schema}SimpleItem[@Name='IsMotion']")
        is_motion_value = is_motion.attrib["Value"] if is_motion is not None else "Unknown"

        rule = xml_tree.find(".//{http://www.onvif.org/ver10/schema}SimpleItem[@Name='Rule']")
        rule_name = rule.attrib["Value"] if rule is not None else "Unknown"

        # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ
        print(f"\nüïí –í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è: {utc_time}")
        print(f"üîÑ –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏: {operation}")
        print(f"üìú –ü—Ä–∞–≤–∏–ª–æ: {rule_name}")
        print(f"üö® –î–≤–∏–∂–µ–Ω–∏–µ: {is_motion_value}")

        # –ï—Å–ª–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ, —Ä–µ–∞–≥–∏—Ä—É–µ–º
        if is_motion_value.lower() == "true":
            print("‚ÄºÔ∏è –î–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ! üöÄ")

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–±—ã—Ç–∏—è:", e)

camera = ONVIFCamera('192.168.2.70', 80, 'admin', '12345', '/home/mumrik/python-onvif-zeep/wsdl')

events_service = camera.create_events_service()
subscription = events_service.CreatePullPointSubscription()
pullpoint_service = camera.create_pullpoint_service(subscription.SubscriptionReference.Address)

print("–û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π...")

while True:
    try:
        response = pullpoint_service.PullMessages({'Timeout': 5, 'MessageLimit': 10})
        for msg in response.NotificationMessage:
            parse_event(msg)  # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π:", e)
