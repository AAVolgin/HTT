import xml.etree.ElementTree as ET
import requests
from requests.auth import HTTPDigestAuth
import re
import json
import xmltodict

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã
IP = "192.168.2.70"  # IP –∫–∞–º–µ—Ä—ã
USER = "admin"        # –õ–æ–≥–∏–Ω
PASS = "12345"        # –ü–∞—Ä–æ–ª—å

# URL –ø–æ—Ç–æ–∫–∞ —Å–æ–±—ã—Ç–∏–π ISAPI
URL = f"http://{IP}/ISAPI/Event/notification/alertStream"

def xml_to_json(xml_data):
    """–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç XML –≤ JSON"""
    try:
        json_data = xmltodict.parse(xml_data)
        return json.dumps(json_data, indent=4, ensure_ascii=False)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ XML –≤ JSON:", e)
        return None

def extract_xml(raw_data):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ XML –∏–∑ –ø–æ—Ç–æ–∫–∞, —É–¥–∞–ª—è—è –∑–∞–≥–æ–ª–æ–≤–∫–∏"""
    match = re.search(r"<EventNotificationAlert.*?</EventNotificationAlert>", raw_data, re.S)
    return match.group(0) if match else None

def parse_motion_event(xml_data):
    """–ü–∞—Ä—Å–∏—Ç XML –∏ –∏—â–µ—Ç —Å–æ–±—ã—Ç–∏—è –¥–≤–∏–∂–µ–Ω–∏—è"""
    try:
        root = ET.fromstring(xml_data)

        ns = {"hik": "http://www.hikvision.com/ver20/XMLSchema"}  # –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º—ë–Ω Hikvision
        event_type = root.find(".//hik:eventType", ns)
        event_state = root.find(".//hik:eventState", ns)

        if event_type is not None and event_state is not None:
            if event_type.text == "VMD" and event_state.text == "active":
                print("‚ÄºÔ∏è –î–≤–∏–∂–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
            else:
                print(f"‚ÑπÔ∏è –î—Ä—É–≥–æ–µ —Å–æ–±—ã—Ç–∏–µ: {event_type.text}, —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {event_state.text}")
    except ET.ParseError as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ XML:", e)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ø–æ—Ç–æ–∫—É —Å–æ–±—ã—Ç–∏–π
with requests.get(URL, auth=HTTPDigestAuth(USER, PASS), stream=True) as response:
    buffer = ""
    for line in response.iter_lines():
        if line:
            decoded_line = line.decode()
            buffer += decoded_line

            if "</EventNotificationAlert>" in buffer:  
                cleaned_xml = extract_xml(buffer)
                if cleaned_xml:
                    json_output = xml_to_json(cleaned_xml)
                    print(json_output)
                    #print("üîπ –û—á–∏—â–µ–Ω–Ω—ã–π XML:", cleaned_xml)  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    parse_motion_event(cleaned_xml)
                else:
                    print("‚ùå XML –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–æ—Ç–æ–∫–µ –¥–∞–Ω–Ω—ã—Ö!")

                buffer = ""  # –û—á–∏—â–∞–µ–º –±—É—Ñ–µ—Ä –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
